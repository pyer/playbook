
- name: Install nginx package
  become: yes
  ansible.builtin.package:
    name:     nginx
    state:    present

- name: Enable nginx service
  become: yes
  ansible.builtin.service:
    name:     nginx
    enabled:  true
    state:    started

- name: Delete default site
  become: yes
  ansible.builtin.file:
    path:  "/etc/nginx/sites-enabled/default"
    state: absent
  notify: reload Nginx

- name: Create sites directories
  become: yes
  ansible.builtin.file:
    path:  "/srv/{{item}}"
    state: directory
    owner: pierre
    group: pierre
    mode:  0755
  notify: reload Nginx
  loop:
    - "public"
    - "private"
    - "www"

- name: Configure sites
  become: yes
  ansible.builtin.copy:
    src:   "{{item}}"
    dest:  "/etc/nginx/sites-available/{{item}}"
    owner: root
    group: root
    mode:  0644
  notify: reload Nginx
  loop:
    - "mon"
    - "private"
    - "public"
    - "status"
    - "www"

- name: Enable sites
  become: yes
  ansible.builtin.file:
    src:   "/etc/nginx/sites-available/{{item}}"
    dest:  "/etc/nginx/sites-enabled/{{item}}"
    state: link
  notify: reload Nginx
  loop:
    - "mon"
    - "private"
    - "public"
    - "status"
    - "www"

- name: Install public favicon.ico
  become: yes
  ansible.builtin.copy:
    src:   "favicon.ico"
    dest:  "/srv/public/favicon.ico"
    owner: pierre
    group: pierre
    mode:  0444

- name: Install private favicon.ico
  become: yes
  ansible.builtin.copy:
    src:   "favicon.ico"
    dest:  "/srv/private/favicon.ico"
    owner: pierre
    group: pierre
    mode:  0444

# Create the htpasswd file for the user admin:
# htpasswd -c roles/nginx/files/htpasswd admin

- name: Install private passwords file
  become: yes
  ansible.builtin.copy:
    src:   "htpasswd"
    dest:  "/etc/nginx/htpasswd"
    owner: root
    group: root
    mode:  0644

- name: Install certbot packages
  become: yes
  ansible.builtin.package:
    name:     "{{item}}"
    state:    present
  loop:
    - python3
    - python3-venv
    - libaugeas0

# sudo python3 -m venv /opt/certbot/
# sudo /opt/certbot/bin/pip install --upgrade pip
#
- name: Enable pip command for certbot
  become: yes
  ansible.builtin.file:
    src:   "/opt/certbot/bin/pip"
    dest:  "/usr/bin/pip"
    state: link

- name: Install certbot pip packages
  become: yes
  ansible.builtin.pip:
    name:       "{{item}}"
    virtualenv: "/opt/certbot/"
  loop:
    - certbot
    - certbot-nginx

- name: Enable certbot command
  become: yes
  ansible.builtin.file:
    src:   "/opt/certbot/bin/certbot"
    dest:  "/usr/bin/certbot"
    state: link

# Create the certificates or add a certificate for a new sub-domain:
# sudo /opt/certbot/bin/certbot run

# monthly
# sudo /opt/certbot/bin/pip install --upgrade certbot certbot-nginx
- name: Install renewal of nginx certificate service and timer
  become: yes
  ansible.builtin.copy:
    src:   "{{item}}"
    dest:  "/etc/systemd/system/{{item}}"
    owner: root
    group: root
    mode:  0644
  loop:
    - certbot.service
    - certbot.timer
   
- name: Enable renewal of nginx certificate at noon and midnight every day
  become: yes
  ansible.builtin.systemd:
    name: "certbot.timer"
    enabled: true
    daemon_reload: true

